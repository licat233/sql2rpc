// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	adminer "github.com/licat233/sql2rpc/examples/api_single_file/api/internal/handler/adminer"
	jwtBlacklist "github.com/licat233/sql2rpc/examples/api_single_file/api/internal/handler/jwtBlacklist"
	"github.com/licat233/sql2rpc/examples/api_single_file/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminer.AddAdminerHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/",
					Handler: adminer.PutAdminerHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminer.GetAdminerHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/",
					Handler: adminer.DelAdminerHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: adminer.GetAdminerListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/enums",
					Handler: adminer.GetAdminerEnumsHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/api/admin/adminer"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: jwtBlacklist.AddJwtBlacklistHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/",
					Handler: jwtBlacklist.PutJwtBlacklistHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: jwtBlacklist.GetJwtBlacklistHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/",
					Handler: jwtBlacklist.DelJwtBlacklistHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: jwtBlacklist.GetJwtBlacklistListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/enums",
					Handler: jwtBlacklist.GetJwtBlacklistEnumsHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/api/admin/jwtBlacklist"),
	)
}
